{"version":3,"file":"static/js/843.93483073.chunk.js","mappings":"iMAEMA,EAAWC,EAAAA,GAAAA,GAAH,sBACRC,EAAWD,EAAAA,GAAAA,GAAH,sB,4BCqBd,EArBiB,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACZC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIJ,IAEV,SAACH,EAAD,UACGG,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,SAACR,EAAD,WACE,SAAC,KAAD,CACES,GAAI,CACFC,SAAS,WAAD,OAAaH,IAEvBI,MAAO,CAAEC,KAAMV,GAJjB,SAMGM,KAPUD,EADN,KAchB,C,oHCpBYM,EAAad,EAAAA,GAAAA,KAAH,4JAQVe,EAAQf,EAAAA,GAAAA,MAAH,qGAMLgB,EAAYhB,EAAAA,GAAAA,OAAH,qG,SCwBtB,EArCkB,SAAC,GAAkB,IAAhBiB,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBMC,EAAY,WAChBD,EAAS,GACV,EAED,OACE,UAACN,EAAD,CAAYG,SAjBO,SAAAK,GACnBA,EAAEC,iBACmB,KAAjBJ,EAAMK,QAKVP,EAASE,GAETE,KANEI,MAAM,uBAOT,EAOC,WACE,SAACV,EAAD,CACEW,SAvBe,SAAAJ,GACnBF,EAASE,EAAEK,cAAcC,MAC1B,EAsBKA,MAAOT,EACPU,UAAU,QACVC,KAAK,OACLC,aAAa,MACbC,WAAS,KAEX,SAAChB,EAAD,uBAGL,E,6BCAD,EAhCe,WACb,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAMMlB,EAAQiB,EAAaE,IAAI,UAiB/B,OAhBAC,EAAAA,EAAAA,YAAU,WACHpB,IAGLqB,EAAAA,EAAAA,IAAoBrB,GACjBsB,MAAK,SAAAC,GACJrC,QAAQC,IAAIoC,GACO,IAAfA,EAAIC,OAIRT,EAAUQ,GAHRjB,MAAM,sCAIT,IACAmB,OAAM,SAAAC,GAAK,OAAIxC,QAAQC,IAAIuC,EAAhB,GACf,GAAE,CAAC1B,KAGF,iCACE,SAAC2B,EAAD,CAAW7B,SAvBA,SAAAW,GACbS,EAA0B,KAAVT,EAAe,CAAEmB,OAAQnB,GAAU,CAAC,EACrD,IAsBIK,IAAU,SAACe,EAAA,EAAD,CAAU9C,MAAO+B,MAGjC,C","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ListWrap = styled.ul``;\nconst ListItem = styled.li``;\n\nexport { ListWrap, ListItem };\n","import { ListWrap, ListItem } from './FilmList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst FilmList = ({ films }) => {\n  const location = useLocation();\n  console.log(films);\n  return (\n    <ListWrap>\n      {films.map(({ id, title }) => (\n        <ListItem key={id}>\n          <Link\n            to={{\n              pathname: `/movies/${id}`,\n            }}\n            state={{ from: location }}\n          >\n            {title}\n          </Link>\n        </ListItem>\n      ))}\n    </ListWrap>\n  );\n};\n\nexport default FilmList;\n","import styled from 'styled-components';\n\nexport const SearchWrap = styled.form`\n  /* display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase; */\n`;\n\nexport const Input = styled.input`\n  /* padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit; */\n`;\n\nexport const SearchBtn = styled.button`\n  /* width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px; */\n`;\n","import { SearchWrap, Input, SearchBtn } from './SearchBox.styled';\nimport { useState } from 'react';\n\nconst Searchbox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      alert('Enter a search value');\n      return;\n    }\n\n    onSubmit(query);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setQuery('');\n  };\n\n  return (\n    <SearchWrap onSubmit={handleSubmit}>\n      <Input\n        onChange={handleChange}\n        value={query}\n        className=\"input\"\n        type=\"text\"\n        autocomplete=\"off\"\n        autoFocus\n      />\n      <SearchBtn>Search</SearchBtn>\n    </SearchWrap>\n  );\n};\n\nexport default Searchbox;\n","import { useEffect, useState } from 'react';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport FilmList from '../../components/FilmList/FilmList';\nimport { getFilmBySearchWord } from '../../services/API';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const filter = value => {\n    setSearchParams(value !== '' ? { search: value } : {});\n  };\n\n  const query = searchParams.get('search');\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getFilmBySearchWord(query)\n      .then(res => {\n        console.log(res);\n        if (res.length === 0) {\n          alert('Nothing was found. Try new request.');\n          return;\n        }\n        setMovies(res);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  return (\n    <>\n      <SearchBox onSubmit={filter} />\n      {movies && <FilmList films={movies}></FilmList>}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["ListWrap","styled","ListItem","films","location","useLocation","console","log","map","id","title","to","pathname","state","from","SearchWrap","Input","SearchBtn","onSubmit","useState","query","setQuery","resetForm","e","preventDefault","trim","alert","onChange","currentTarget","value","className","type","autocomplete","autoFocus","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getFilmBySearchWord","then","res","length","catch","error","SearchBox","search","FilmList"],"sourceRoot":""}